System.register(["react-query","jotai"],function(w){"use strict";var p,D,P,O,c;return{setters:[function(u){p=u.QueryClient,D=u.QueryObserver,P=u.InfiniteQueryObserver,O=u.isCancelledError},function(u){c=u.atom}],execute:function(){w({atomWithInfiniteQuery:A,atomWithQuery:g});const u=w("queryClientAtom",c(new p));function g(l,b=a=>a(u)){const a=c(i=>{const n=b(i),t=typeof l=="function"?l(i):l;let r=null;const o=(()=>{let e=n.getQueryData(t.queryKey);return e===void 0&&t.initialData&&(e=typeof t.initialData=="function"?t.initialData():t.initialData),e})(),f=c(o===void 0&&t.enabled!==!1?new Promise((e,v)=>{r=(Q,y)=>{y?v(y):e(Q)}}):o);let d=()=>{throw new Error("atomWithQuery: setting data without mount")};const h=e=>{if(e.error){r?(r(void 0,e.error),r=null):d(Promise.reject(e.error));return}e.data!==void 0&&(r?(r(e.data),r=null):d(e.data))},s=n.defaultQueryObserverOptions(t);o===void 0&&t.enabled!==!1&&typeof s.staleTime!="number"&&(s.staleTime=1e3);const m=new D(n,s);return o===void 0&&t.enabled!==!1&&m.fetchOptimistic(s).then(h).catch(e=>h({error:e})),f.onMount=e=>{if(d=e,t.enabled!==!1)return m.subscribe(h)},{dataAtom:f,observer:m}},(i,n,t)=>{switch(t.type){case"refetch":{const{dataAtom:r,observer:o}=i(a);return n(r,new Promise(()=>{})),Promise.resolve().then(()=>o.refetch({cancelRefetch:!0})).then(()=>{})}default:throw new Error("no action")}});return c(i=>{const{dataAtom:n}=i(a);return i(n)},(i,n,t)=>n(a,t))}function A(l,b=a=>a(u)){const a=c(i=>{const n=b(i),t=typeof l=="function"?l(i):l;let r=null;const o=(()=>{let e=n.getQueryData(t.queryKey);return e===void 0&&t.initialData&&(e=typeof t.initialData=="function"?t.initialData():t.initialData),e})(),f=c(o===void 0&&t.enabled!==!1?new Promise((e,v)=>{r=(Q,y)=>{y?v(y):e(Q)}}):o);let d=()=>{throw new Error("atomWithInfiniteQuery: setting data without mount")};const h=e=>{if(e.error&&!O(e.error)){r?(r(void 0,e.error),r=null):d(Promise.reject(e.error));return}e.data!==void 0&&(r?(r(e.data),r=null):d(e.data))},s=n.defaultQueryObserverOptions(t);o===void 0&&t.enabled!==!1&&typeof s.staleTime!="number"&&(s.staleTime=1e3);const m=new P(n,s);return o===void 0&&t.enabled!==!1&&m.fetchOptimistic(s).then(h).catch(e=>h({error:e})),f.onMount=e=>{if(d=e,t.enabled!==!1)return m.subscribe(h)},{dataAtom:f,observer:m,options:t}},(i,n,t)=>{const{observer:r}=i(a);switch(t.type){case"refetch":{const{type:o,...f}=t;r.refetch(f);break}case"fetchPreviousPage":{r.fetchPreviousPage();break}case"fetchNextPage":{r.fetchNextPage();break}}});return c(i=>{const{dataAtom:n}=i(a);return i(n)},(i,n,t)=>n(a,t))}}}});
