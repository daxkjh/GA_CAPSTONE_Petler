System.register(["@urql/core","jotai","wonka"],function(v){"use strict";var A,i,p,g,q;return{setters:[function(m){A=m.createClient},function(m){i=m.atom},function(m){p=m.pipe,g=m.skip,q=m.subscribe}],execute:function(){v({atomWithMutation:E,atomWithQuery:d,atomWithSubscription:k});const m=(()=>{try{return process.env.JOTAI_URQL_DEFAULT_URL}catch{return}})()||"/graphql",P=v("clientAtom",i(A({url:m}))),W=a=>"data"in a&&!a.error;function d(a,w=o=>o(P)){const o=i(r=>{const t=a(r);if(t.pause)return null;const n=w(r);let s=null;const u=i(new Promise(e=>{s=e}));let l=()=>{throw new Error("setting result without mount")};const c=e=>{if(e instanceof Promise){l(e);return}if(!W(e))throw new Error("result does not have data");s?(s(e),s=null):l(e)};n.query(t.query,t.variables,{...t.requestPolicy&&{requestPolicy:t.requestPolicy},...t.context}).toPromise().then(c).catch(()=>{}),u.onMount=e=>{l=e};const b=i(null),y=i(e=>e(u),(e,h,f)=>{const T=p(n.query(t.query,t.variables,{...t.requestPolicy&&{requestPolicy:t.requestPolicy},...t.context}),g(1),q(c));h(b,T),f(()=>{var x;return(x=e(b))==null?void 0:x.unsubscribe()})});return y.onMount=e=>{let h;return e(f=>{h=f}),h},{args:t,client:n,resultAtom:y,subscriptionAtom:b,listener:c}});return i(r=>{const t=r(o);if(!t)return null;const{resultAtom:n}=t;return r(n)},(r,t,n)=>{switch(n.type){case"reexecute":{const s=r(o);if(!s)throw new Error("query is paused");const{args:u,client:l,subscriptionAtom:c,listener:b}=s;b(new Promise(()=>{}));const y=p(l.query(u.query,u.variables,{...u.requestPolicy&&{requestPolicy:u.requestPolicy},...u.context,...n.opts}),q(b)),e=r(c);e==null||e.unsubscribe(),t(c,y)}}})}function E(a,w=o=>o(P)){const o=i(new Promise(()=>{}));return i(r=>r(o),(r,t,n)=>{t(o,new Promise(()=>{}));const s=w(r),u=a(r);s.mutation(u,n.variables,n.context).toPromise().then(l=>{var c;t(o,l),(c=n.callback)==null||c.call(n,l)}).catch(()=>{})})}const M=a=>"data"in a;function k(a,w=o=>o(P)){const o=i(r=>{const t=a(r);if(t.pause)return{args:t};const n=w(r);let s=null;const u=i(new Promise(e=>{s=e}));let l=()=>{throw new Error("setting result without mount")};const c=e=>{if(!M(e))throw new Error("result does not have data");s?(s(e),s=null):l(e)},b=p(n.subscription(t.query,t.variables,t.context),q(c));let y=setTimeout(()=>{y=null,b.unsubscribe()},1e3);return u.onMount=e=>{l=e;let h;return y?(clearTimeout(y),h=b):h=p(n.subscription(t.query,t.variables,t.context),q(c)),()=>h.unsubscribe()},{resultAtom:u,args:t}});return i(r=>{const{resultAtom:t}=r(o);return t?r(t):null})}}}});
